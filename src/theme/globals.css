ion-content, ion-page, .ion-page {
    --background: #eaeeea;
}

button.vc-arrow, button.vc-title, button.vc-nav-item, button.vc-nav-arrow, button.vc-nav-title {
    background: var(--background);
    color: var(--ion-text-color);
}

ion-page, .ion-page {
    background: var(--background);
}

ion-datetime::part(native), ion-datetime-button::part(native) {
    background: var(--ion-item-background, var(--ion-background-color, #fff));
}

ion-button[expand=full] {
    margin-inline-start: 16px;
    margin-inline-end: 16px;
}

ion-button[expand=full]::part(native) {
    border-radius: 7px;
}

router-link, a {
    text-decoration: none;
}

ion-list {
    border-radius: 7px;
}

ion-label ion-progress-bar {
    margin-top: 8px;
}

.ion-color-warning :not(.toast-header, .toast-message) {
    color: var(--ion-color-warning);
}

.ion-color-success :not(.toast-header, .toast-message) {
    color: var(--ion-color-success);
}

.ion-color-tertiary :not(.toast-header, .toast-message) {
    color: var(--ion-color-tertiary);
}

.ion-color-danger :not(.toast-header, .toast-message) {
    color: var(--ion-color-danger);
}

.ion-color-medium :not(.toast-header, .toast-message) {
    color: var(--ion-color-medium);
}

input {
    caret-color: var(--ion-color-primary) !important;
}

.list-title * {
    margin: 0;
}

.list-title {
    font-size: 1rem;
    font-weight: 400;

    margin: auto 30px;
    opacity: 0.5;

    margin-bottom: -7px;
    margin-top: 12px;
}

/* Dark colors */

.vc-dark {
    --vc-color: #fff;
    --vc-bg: #101311;
    --vc-border: var(--ion-color-medium);
}

body.dark .inset-background, .inset-background ion-toolbar {
    --background: #000000;
}

body.dark ion-item {
    --ion-item-background: #101311;
}

body.dark ion-modal .inset-background, ion-modal .inset-background ion-toolbar {
    --background: #141414;
}

body.dark ion-modal ion-item {
    --ion-item-background: #212121;
}

body.dark ion-content, body.dark ion-page, body.dark .ion-page {
    --background: #0b0e0c;
}

body.dark .dule-face-icon *:nth-child(1) {
    stroke: var(--ion-text-color)
}

body.dark .dule-face-icon *:not(:nth-child(1)) {
    fill: var(--ion-text-color)
}

.ion-border {
    border-width: 0.55px;
    border-color: var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-250, #c8c7cc)));
    border-style: solid;
}

.ion-content-padding {
    --padding-start: 1.5em;
    --padding-end: 1.5em;
}

.ion-toggle-border::part(track) {
    border-width: 0.55px;
    border-color: var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-250, #c8c7cc)));
    border-style: solid;
}

@media (min-width: 1024px) {
    .ion-page ion-content:nth-child(2) {
        width: 1024px;
        transform: translate(-50%);
        left: 50%;
    }
    ion-modal ion-content {
        width: auto !important;
    }
}
